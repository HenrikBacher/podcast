name: Build app

on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]
  push:
    branches:
      - main
    paths-ignore:
      - "site/**"
      - "**/podcasts.json" 

jobs:
  build-app:
    name: "Build ommer"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Version
        id: get_version
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          CURRENT_VERSION=$(grep "version = \".*\"" build.gradle.kts | cut -d'"' -f2)
          echo "Current version: $CURRENT_VERSION"
          
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            PR_DESCRIPTION=$(gh api /repos/${{ github.repository }}/pulls/$PR_NUMBER --jq .body)
            
            if [[ $PR_DESCRIPTION == *"- [x] major"* ]]; then
              NEW_VERSION="$((major + 1)).0.0"
            elif [[ $PR_DESCRIPTION == *"- [x] minor"* ]]; then
              NEW_VERSION="${major}.$((minor + 1)).0"
            else
              NEW_VERSION="${major}.${minor}.$((patch + 1))"
            fi
          else
            NEW_VERSION="${major}.${minor}.$((patch + 1))"
          fi
          
          echo "New version: $NEW_VERSION"
          sed -i "s/version = \".*\"/version = \"$NEW_VERSION\"/" build.gradle.kts
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/configuration-cache
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build app
        run: |
          java --version
          chmod +x ./gradlew
          ./gradlew build

      - name:  Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          prerelease: ${{ steps.get_version.outputs.is_prerelease }}
          body: |            
            Changes in this release:
            ${{ steps.get_version.outputs.description }}
          files: |
            ./ommer/build/libs/ommer.jar
