name: Update feeds

on:
  push:
    paths:
      - "**/generate-feed.yml"
      - "**/podcasts.json"
  schedule:
    - cron: "15 * * * *"
  workflow_dispatch:

jobs:
  load-podcasts:
    name: Load Podcasts
    runs-on: ubuntu-latest
    outputs:
      podcasts: ${{ steps.load_data.outputs.podcasts }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load Podcasts Data
        id: load_data
        run: |
          echo "podcasts=$(jq -c . < podcasts.json)" >> $GITHUB_OUTPUT

  update-feed:
    name: "Update ${{ matrix.podcasts.slug }} feed"
    needs: load-podcasts
    strategy:
      matrix: ${{ fromJson(needs.load-podcasts.outputs.podcasts) }}
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release
        id: get_latest_release
        run: |
          LATEST_RELEASE_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest" | jq -r '.assets[0].browser_download_url')
          echo "Downloading latest release from $LATEST_RELEASE_URL"
          curl -L $LATEST_RELEASE_URL -o ommer.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "adopt"
          java-package: "jre"

      - name: Execute parser for ${{ matrix.podcasts.slug }} feed
        run: java -jar ./ommer.jar --slug ${{ matrix.podcasts.slug }} --urn ${{ matrix.podcasts.urn }} --imageUrl ${{ matrix.podcasts.image }} --apiKey ${{ secrets.API_KEY }} --baseUrl ${{ secrets.HOST_URL }}

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get local MD5 hash of ${{ matrix.podcasts.slug }}.xml
        id: local_md5
        run: |
          MD5_HASH=$(md5sum output/${{ matrix.podcasts.slug }}.xml | awk '{print $1}' | xxd -r -p | base64)
          echo "LOCAL_MD5=$MD5_HASH" >> $GITHUB_ENV
          echo "LOCAL_MD5=$MD5_HASH"

      - name: Get blob MD5 hash of ${{ matrix.podcasts.slug }}.xml
        id: blob_md5
        continue-on-error: true
        run: |
          BLOB_PROPERTIES=$(az storage blob show \
            --account-name ${{ secrets.STORAGE_ACCOUNT }} \
            --container-name ${{ secrets.CONTAINER_NAME }} \
            --auth-mode login \
            --name ${{ matrix.podcasts.slug }}.xml \
            --query properties.contentSettings.contentMd5 -o tsv)
          echo "BLOB_MD5=$BLOB_PROPERTIES" >> $GITHUB_ENV
          echo "BLOB_MD5=$BLOB_PROPERTIES"

      - name: Upload ${{ matrix.podcasts.slug }}.xml if it has been updated
        if: env.LOCAL_MD5 != env.BLOB_MD5
        run: |
          az storage blob upload \
            --account-name ${{ secrets.STORAGE_ACCOUNT }} \
            --container-name ${{ secrets.CONTAINER_NAME }} \
            --auth-mode login \
            --name ${{ matrix.podcasts.slug }}.xml \
            --file output/${{ matrix.podcasts.slug }}.xml \
            --overwrite
